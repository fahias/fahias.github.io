{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/log-form/log-form.component.css","webpack:///./src/app/components/log-form/log-form.component.html","webpack:///./src/app/components/log-form/log-form.component.ts","webpack:///./src/app/components/logs/logs.component.css","webpack:///./src/app/components/logs/logs.component.html","webpack:///./src/app/components/logs/logs.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/services/log.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <app-log-form></app-log-form>\\n  <app-logs></app-logs>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LogFormComponent } from './components/log-form/log-form.component';\nimport { LogsComponent } from './components/logs/logs.component';\nimport {LogService} from './services/log.service';\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LogFormComponent,\n    LogsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [LogService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"card card-body mb-3\\\">\\n  <form (ngSubmit)=\\\"onSubmit()\\\" >\\n    <div class=\\\"form-group\\\">\\n      <input type=\\\"text\\\" name=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Add a Log...\\\" [(ngModel)]=\\\"text\\\">\\n    </div>\\n    <input type=\\\"submit\\\" value=\\\"Add Log\\\" class=\\\"btn btn-light\\\" [disabled]=!this.text >\\n    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" [hidden]=\\\"!this.text\\\" (click)=\\\"clearState()\\\">Clear</button>\\n  </form>\\n</div>\"","import { Component, OnInit} from '@angular/core';\nimport {Log} from '../../models/Log';\nimport {LogService} from '../../services/log.service';\nimport { Subscription } from 'rxjs';\n@Component({\n  selector: 'app-log-form',\n  templateUrl: './log-form.component.html',\n  styleUrls: ['./log-form.component.css']\n})\nexport class LogFormComponent implements OnInit {\n\n  id:string;\n  text:string;\n  date:string;\n  isNew:boolean=true;\n  // ngOnDestroy(): void {\n  //   this.logSourceSubscription.unsubscribe();\n  // }\n\n  // private logSourceSubscription:Subscription\n  constructor(private logservice:LogService) { }\n\n  ngOnInit() {\n    // this.logSourceSubscription=\n    // this.logservice.getLogSource().subscribe(log=>console.log(log));\n      this.logservice.selectedLog.subscribe(log=>{\n        if(log.id !=null){\n          this.isNew=false;\n            this.id=log.id;\n            this.text=log.text;\n            this.date=log.date;\n        }\n        \n      });\n  }\n\n  onSubmit(){\n    if(this.isNew){\n      const newLog={\n        id: this.generateId(),\n        text:this.text,\n        date:new Date()\n\n      }\n      //Add a log\n      this.logservice.addLog(newLog);\n    } else{\n      //creat a log to be updated\n      const updLog={\n      id:this.id,\n      text:this.text,\n      date:new Date()\n      }\n      this.logservice.updateLog(updLog);\n    }\n\n    this.clearState();\n  }\n    clearState(){\n    this.isNew=true;\n    this.id='';\n    this.text='';\n    this.date='';\n  }\n\n  generateId(){\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n}\n","module.exports = \".boxsize{\\r\\n    width:200px;\\r\\n    \\r\\n}\"","module.exports = \"<ul class=\\\"list-group\\\" *ngIf=\\\"loaded && logs.length>0 \\\">\\n \\n  <li [class.list-group-item-secondary]=\\\"selectedLog===log\\\" *ngFor=\\\"let log of logs\\\" class=\\\"list-group-item d-flex justify-contnet-between align-items-center  \\\">\\n    <div class=\\\"boxsize\\\">\\n      <a  (click)=\\\"onSelect(log)\\\" href=\\\"#\\\">{{log.text}}</a>\\n    </div>\\n    <div class=\\\"boxsize\\\"><span class=\\\"log-data\\\">{{log.date|date:'short'}}</span></div>\\n    <i class=\\\"fa fa-remove\\\" (click)=\\\"onDelete(log)\\\"></i>\\n  </li>\\n\\n</ul>\\n\\n<div *ngIf=\\\"loaded && logs.length==0\\\">there is no logs to be loaded</div>\\n<div *ngIf=\\\"!loaded\\\"> Loading Logs...</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Log} from '../../models/Log';\nimport {LogService} from '../../services/log.service';\n@Component({\n  selector: 'app-logs',\n  templateUrl: './logs.component.html',\n  styleUrls: ['./logs.component.css']\n})\nexport class LogsComponent implements OnInit {\n  \n  logs:Log[];\n  selectedLog:Log;\n  loaded:boolean=false;\n\n  constructor(private logservice:LogService) { }\n\n  ngOnInit() {\n\n    this.logservice.stateClear.subscribe(clear=>{\n      if(clear){\n        this.selectedLog={id:'',text:'',date:''}\n      }\n    })\n\n  this.logservice.getLogs().subscribe(log=>{\n    this.logs=log;\n    this.loaded=true;\n  });\n  }\n  onSelect(log:Log){\n      this.logservice.setFormLog(log);\n      this.selectedLog=log;\n  }\n  onDelete(log:Log){\n   if(confirm('Are you sure?')){\n    this.logservice.deleteLog(log);\n   }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark mb-3\\\">\\n  <div class=\\\"container\\\">\\n    <a href=\\\"/\\\" class=\\\"navbar brand\\\">DevLogger</a>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Log } from '../models/Log';\nimport { BehaviorSubject, of, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogService {\n\n  logs: Log[];\n\n  private logsource = new BehaviorSubject<Log>({id:null,text:null,date:null});\n  selectedLog = this.logsource.asObservable();\n  // public getLogSource(): Subject<Log>{\n  //   return this.logsource;\n  // }\n\n  private stateSource = new BehaviorSubject<boolean>(true);\n  stateClear=this.stateSource.asObservable();\n\n\n\n  constructor() {\n    // this.logs = [\n    //   { id: '1', text: 'Generated Components', date: new Date('12/12/2017 12:12:12') },\n    //   { id: '2', text: 'loged comp', date: new Date('12/12/2017 23:12:12') },\n    //   { id: '3', text: 'log', date: new Date('12/12/2017 23:12:12') }\n    // ]\n    this.logs=[];\n  }\n  getLogs():Observable<Log[]> {\n    \n    //get from local storage\n    if(localStorage.getItem('logs')===null){\n      this.logs=[];\n    }else{\n      this.logs=JSON.parse(localStorage.getItem('logs'));\n    }\n    //to sort the logs and also returning logs\n    return of(this.logs.sort((a,b)=>{\n      return b.date=a.date;\n    }));\n  }\n  setFormLog(log: Log) {\n    this.logsource.next(log);\n  }\n  addLog(log:Log){\n      this.logs.unshift(log);\n      //add to local storage\n      localStorage.setItem('logs',JSON.stringify(this.logs));\n  }\n  updateLog(log:Log){\n    this.logs.forEach((cur, index)=>{\n          if(log.id===cur.id){\n            this.logs.splice(index,1);\n          }      \n    })\n    this.logs.unshift(log);\n    //update the local storage\n    localStorage.setItem('logs',JSON.stringify(this.logs));\n  }\n  deleteLog(log:Log){\n    this.logs.forEach((cur, index)=>{\n          if(log.id===cur.id){\n            this.logs.splice(index,1);\n          }      \n    })\n   //delete the local storage\n   localStorage.setItem('logs',JSON.stringify(this.logs));\n  }\n\n  clearState(){\n    \n    this.stateSource.next(true);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}